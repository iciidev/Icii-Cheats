local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\22\76","\33\56\98\229\174\30\210\99"),function(v42) if (v9(v42,2)==79) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,1,1081 -(1020 + 60) ));return "";end end else local v104=v10(v8(v42,16));if v30 then local v112=0;local v113;while true do if (v112==1) then return v113;end if (v112==0) then v113=v13(v104,v30);v30=nil;v112=1;end end else return v104;end end end);local function v31(v43,v44,v45) if v45 then local v105=0;local v106;while true do if (0==v105) then v106=(v43/(2^(v44-(1424 -(630 + 793)))))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v106-(v106%(2 -1)) ;end end else local v107=0;local v108;while true do if (v107==0) then v108=2^(v44-1) ;return (((v43%(v108 + v108))>=v108) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + (14 -11) );v29=v29 + 4 ;return (v54 * (32385633 -15608417)) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (0==v55) then v56=v34();v57=v34();v55=1;end if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (3==v55) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v125=0;while true do if (v125==0) then v60=1;v58=0;break;end end end elseif (v60==(5272 -3225)) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end end end local function v36(v62) local v63;if  not v62 then local v109=0;while true do if (v109==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=0;local v82;local v83;while true do if (v81==0) then v82=v32();v83=nil;v81=1;end if (v81==1) then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==(1750 -(760 + 987))) then v83=v36();end v70[v80]=v83;break;end end end v68[571 -(367 + 201) ]=v32();for v84=928 -(214 + 713) ,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1,1914 -(1789 + 124) )==0) then local v121=v31(v86,768 -(745 + 21) ,3);local v122=v31(v86,2 + 2 ,6);local v123={v33(),v33(),nil,nil};if (v121==(0 + 0)) then v123[1 + 2 ]=v33();v123[4]=v33();elseif (v121==1) then v123[3 + 0 ]=v34();elseif (v121==2) then v123[3]=v34() -(2^16) ;elseif (v121==3) then local v136=0;while true do if (v136==0) then v123[3]=v34() -(2^16) ;v123[4]=v33();break;end end end if (v31(v122,1,1)==1) then v123[2]=v70[v123[2]];end if (v31(v122,1057 -(87 + 968) ,2)==1) then v123[3]=v70[v123[3]];end if (v31(v122,3,3)==(4 -3)) then v123[4]=v70[v123[4 + 0 ]];end v65[v84]=v123;end break;end end end for v87=1,v34() do v66[v87-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[878 -(282 + 595) ];local v76=v72[1639 -(1523 + 114) ];local v77=v72[3 + 0 ];return function(...) local v89=v75;local v90=v76;local v91=v77;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v110=0 -0 ,v97 do if (v110>=v91) then v95[v110-v91 ]=v96[v110 + 1 ];else v99[v110]=v96[v110 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v111=0;while true do if (v111==0) then v101=v89[v93];v102=v101[1];v111=1;end if (v111==1) then if (v102<=(1465 -(447 + 966))) then if (v102<=25) then if (v102<=12) then if (v102<=(13 -8)) then if (v102<=2) then if (v102<=0) then if  not v99[v101[2]] then v93=v93 + (1 -0) ;else v93=v101[3];end elseif (v102==1) then if (v99[v101[2]]<v101[1069 -(68 + 997) ]) then v93=v93 + 1 ;else v93=v101[3];end else local v185=0;local v186;while true do if (v185==0) then v186=v101[2];do return v21(v99,v186,v94);end break;end end end elseif (v102<=3) then v99[v101[1272 -(226 + 1044) ]][v99[v101[3]]]=v101[4];elseif (v102==4) then v99[v101[2]]={};else do return v99[v101[2]]();end end elseif (v102<=8) then if (v102<=6) then local v141=v101[2];v99[v141](v21(v99,v141 + (1818 -(1703 + 114)) ,v94));elseif (v102>7) then v99[v101[2]]=v99[v101[3]];else v99[v101[2]]=v99[v101[12 -9 ]][v101[705 -(376 + 325) ]];end elseif (v102<=10) then if (v102==9) then if (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else local v192=0;local v193;local v194;local v195;while true do if (1==v192) then v195=117 -(32 + 85) ;for v452=v193,v101[12 -8 ] do local v453=0;while true do if (v453==0) then v195=v195 + 1 ;v99[v452]=v194[v195];break;end end end break;end if (v192==0) then v193=v101[2];v194={v99[v193](v21(v99,v193 + 1 ,v94))};v192=1;end end end elseif (v102==11) then local v196=v101[2];local v197={};for v357=1, #v98 do local v358=v98[v357];for v386=0, #v358 do local v387=0;local v388;local v389;local v390;while true do if (v387==1) then v390=v388[2];if ((v389==v99) and (v390>=v196)) then v197[v390]=v389[v390];v388[1]=v197;end break;end if (v387==0) then v388=v358[v386];v389=v388[1];v387=1;end end end end else v93=v101[3 + 0 ];end elseif (v102<=18) then if (v102<=(4 + 11)) then if (v102<=(970 -(892 + 65))) then local v142=v101[2];v99[v142]=v99[v142](v21(v99,v142 + 1 ,v94));elseif (v102==(32 -18)) then local v199=0;local v200;local v201;local v202;while true do if (v199==0) then v200=v90[v101[5 -2 ]];v201=nil;v199=1;end if (v199==1) then v202={};v201=v18({},{[v7("\36\210\143\95\233\56\33","\89\123\141\230\49\141\93")]=function(v454,v455) local v456=v202[v455];return v456[1][v456[2]];end,[v7("\204\78\248\9\7\67\253\117\243\20","\42\147\17\150\108\112")]=function(v457,v458,v459) local v460=v202[v458];v460[1][v460[2]]=v459;end});v199=2;end if (2==v199) then for v462=1,v101[4] do local v463=0;local v464;while true do if (v463==1) then if (v464[2 -1 ]==55) then v202[v462-(1 -0) ]={v99,v464[3]};else v202[v462-1 ]={v73,v464[3]};end v98[ #v98 + 1 ]=v202;break;end if (0==v463) then v93=v93 + 1 ;v464=v89[v93];v463=1;end end end v99[v101[2]]=v40(v200,v201,v74);break;end end else v99[v101[2]][v99[v101[3]]]=v101[4];end elseif (v102<=16) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102>17) then local v206=v101[2];v99[v206]=v99[v206](v21(v99,v206 + 1 ,v101[3]));else do return v99[v101[2]]();end end elseif (v102<=21) then if (v102<=19) then if (v99[v101[2]]==v99[v101[18 -(9 + 5) ]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102>20) then v99[v101[2]]=v99[v101[3]]%v101[4] ;else v99[v101[2]]=v101[353 -(87 + 263) ]~=0 ;end elseif (v102<=23) then if (v102>22) then v99[v101[2]][v101[3]]=v101[4];else local v213=0;local v214;while true do if (v213==0) then v214=v101[2];v99[v214](v99[v214 + 1 ]);break;end end end elseif (v102>24) then v99[v101[2]]=v74[v101[3]];else local v217=0;local v218;while true do if (v217==0) then v218=v101[2];v99[v218]=v99[v218](v21(v99,v218 + 1 ,v94));break;end end end elseif (v102<=(218 -(67 + 113))) then if (v102<=31) then if (v102<=28) then if (v102<=(402 -(85 + 291))) then for v175=v101[2],v101[3] do v99[v175]=nil;end elseif (v102>27) then local v219=0;local v220;while true do if (v219==0) then v220=v101[2];v99[v220](v21(v99,v220 + 1 ,v94));break;end end else v99[v101[2]]=v101[3] + v99[v101[1269 -(243 + 1022) ]] ;end elseif (v102<=29) then local v144=0;local v145;while true do if (v144==0) then v145=v101[2];v99[v145]=v99[v145](v99[v145 + 1 + 0 ]);break;end end elseif (v102>(114 -84)) then local v222=0;local v223;local v224;local v225;while true do if (v222==1) then v225={};v224=v18({},{[v7("\48\153\36\113\227\237\23","\136\111\198\77\31\135")]=function(v465,v466) local v467=v225[v466];return v467[2 -1 ][v467[2 + 0 ]];end,[v7("\61\54\169\83\170\237\25\173\7\17","\201\98\105\199\54\221\132\119")]=function(v468,v469,v470) local v471=v225[v469];v471[1][v471[2]]=v470;end});v222=2;end if (v222==0) then v223=v90[v101[3]];v224=nil;v222=1;end if (v222==2) then for v473=1 + 0 ,v101[4] do local v474=0;local v475;while true do if (v474==0) then v93=v93 + 1 ;v475=v89[v93];v474=1;end if (v474==1) then if (v475[1]==55) then v225[v473-1 ]={v99,v475[3]};else v225[v473-1 ]={v73,v475[955 -(802 + 150) ]};end v98[ #v98 + 1 ]=v225;break;end end end v99[v101[2]]=v40(v223,v224,v74);break;end end else local v226=0;local v227;while true do if (v226==0) then v227=v101[2];v99[v227]=v99[v227]();break;end end end elseif (v102<=34) then if (v102<=32) then local v146=0;local v147;local v148;while true do if (v146==0) then v147=v101[2];v148=v99[v101[3]];v146=1;end if (v146==1) then v99[v147 + 1 ]=v148;v99[v147]=v148[v99[v101[4]]];break;end end elseif (v102==33) then local v228=0;local v229;while true do if (v228==0) then v229=v101[2];do return v21(v99,v229,v94);end break;end end else v99[v101[1182 -(1123 + 57) ]]=v99[v101[3]][v99[v101[4]]];end elseif (v102<=36) then if (v102==35) then v99[v101[2 + 0 ]]=v101[3];else local v234=0;local v235;local v236;local v237;local v238;while true do if (v234==0) then v235=v101[2];v236,v237=v92(v99[v235](v99[v235 + (2 -1) ]));v234=1;end if (v234==2) then for v476=v235,v94 do local v477=0;while true do if (v477==0) then v238=v238 + 1 ;v99[v476]=v236[v238];break;end end end break;end if (1==v234) then v94=(v237 + v235) -1 ;v238=0;v234=2;end end end elseif (v102>37) then v99[v101[2]][v99[v101[1933 -(1869 + 61) ]]]=v99[v101[4]];else v74[v101[3]]=v99[v101[2]];end elseif (v102<=45) then if (v102<=41) then if (v102<=39) then v99[v101[1 + 1 ]]= #v99[v101[3]];elseif (v102>(72 -32)) then v99[v101[2]]=v73[v101[3]];else local v245=0;local v246;while true do if (v245==0) then v246=v101[2];do return v99[v246](v21(v99,v246 + 1 + 0 ,v101[3]));end break;end end end elseif (v102<=43) then if (v102==(147 -105)) then v73[v101[3]]=v99[v101[999 -(915 + 82) ]];else local v249=v101[2];local v250,v251=v92(v99[v249](v21(v99,v249 + 1 + 0 ,v94)));v94=(v251 + v249) -1 ;local v252=0;for v366=v249,v94 do local v367=0;while true do if (v367==0) then v252=v252 + 1 ;v99[v366]=v250[v252];break;end end end end elseif (v102>44) then v99[v101[5 -3 ]]=v101[3];else local v255=0;local v256;local v257;local v258;local v259;while true do if (v255==2) then for v480=v256,v94 do v259=v259 + 1 ;v99[v480]=v257[v259];end break;end if (v255==0) then v256=v101[2];v257,v258=v92(v99[v256](v21(v99,v256 + 1 ,v101[3])));v255=1;end if (v255==1) then v94=(v258 + v256) -1 ;v259=0;v255=2;end end end elseif (v102<=48) then if (v102<=46) then local v150=v101[2];local v151=v101[5 -1 ];local v152=v150 + 2 ;local v153={v99[v150](v99[v150 + 1 + 0 ],v99[v152])};for v177=1,v151 do v99[v152 + v177 ]=v153[v177];end local v154=v153[1];if v154 then local v260=0;while true do if (v260==0) then v99[v152]=v154;v93=v101[1477 -(1329 + 145) ];break;end end else v93=v93 + 1 ;end elseif (v102==47) then local v261=v101[2];local v262,v263=v92(v99[v261](v21(v99,v261 + 1 ,v94)));v94=(v263 + v261) -(972 -(140 + 831)) ;local v264=1850 -(1409 + 441) ;for v368=v261,v94 do local v369=0;while true do if (v369==0) then v264=v264 + 1 + 0 ;v99[v368]=v262[v264];break;end end end else v99[v101[1 + 1 ]]=v101[3] + v99[v101[4]] ;end elseif (v102<=(65 -15)) then if (v102==49) then v99[v101[2]]=v40(v90[v101[3]],nil,v74);else local v267=0;local v268;while true do if (v267==0) then v268=v101[440 -(262 + 176) ];v99[v268](v21(v99,v268 + (1188 -(1069 + 118)) ,v101[3]));break;end end end elseif (v102==(115 -64)) then v73[v101[1724 -(345 + 1376) ]]=v99[v101[2]];else local v271=0;local v272;while true do if (v271==0) then v272=v101[3 -1 ];v99[v272]=v99[v272](v21(v99,v272 + 1 ,v101[3]));break;end end end elseif (v102<=79) then if (v102<=(753 -(198 + 490))) then if (v102<=58) then if (v102<=55) then if (v102<=53) then local v155=v101[2];do return v99[v155](v21(v99,v155 + 1 ,v101[3]));end elseif (v102==54) then v99[v101[1 + 1 ]][v101[3]]=v99[v101[17 -13 ]];else v99[v101[3 -1 ]]=v99[v101[3]];end elseif (v102<=56) then local v156=0;local v157;local v158;while true do if (v156==0) then v157=v101[2];v158=v99[v157];v156=1;end if (v156==1) then for v391=v157 + 1 ,v94 do v15(v158,v99[v391]);end break;end end elseif (v102>57) then local v277=0;local v278;local v279;local v280;while true do if (v277==1) then v280=v99[v278 + 2 ];if (v280>0) then if (v279>v99[v278 + 1 + 0 ]) then v93=v101[3];else v99[v278 + 3 ]=v279;end elseif (v279<v99[v278 + 1 ]) then v93=v101[3];else v99[v278 + 3 ]=v279;end break;end if (v277==0) then v278=v101[2];v279=v99[v278];v277=1;end end else v99[v101[2]]=v99[v101[794 -(368 + 423) ]][v101[1210 -(696 + 510) ]];end elseif (v102<=(191 -130)) then if (v102<=59) then v99[v101[20 -(10 + 8) ]]=v99[v101[1265 -(1091 + 171) ]][v99[v101[4]]];elseif (v102>60) then for v372=v101[7 -5 ],v101[3] do v99[v372]=nil;end else v99[v101[2]]();end elseif (v102<=63) then if (v102>62) then local v283=0;local v284;local v285;local v286;while true do if (v283==1) then v286=v101[445 -(416 + 26) ];for v485=1,v286 do v285[v485]=v99[v284 + v485 ];end break;end if (0==v283) then v284=v101[2];v285=v99[v284];v283=1;end end else v99[v101[2]]= #v99[v101[3]];end elseif (v102>(11 + 53)) then local v288=v101[2];local v289=v99[v101[3]];v99[v288 + 1 ]=v289;v99[v288]=v289[v101[4]];else v99[v101[2]]=v99[v101[3]] + v101[4] ;end elseif (v102<=72) then if (v102<=(216 -148)) then if (v102<=66) then local v161=v101[2];v99[v161](v21(v99,v161 + 1 ,v101[3]));elseif (v102==67) then local v294=0;local v295;local v296;local v297;local v298;while true do if (1==v294) then v94=(v297 + v295) -1 ;v298=0;v294=2;end if (v294==2) then for v488=v295,v94 do v298=v298 + 1 ;v99[v488]=v296[v298];end break;end if (v294==0) then v295=v101[6 -4 ];v296,v297=v92(v99[v295](v99[v295 + 1 ]));v294=1;end end else local v299=0;local v300;local v301;local v302;while true do if (v299==0) then v300=v101[2];v301={v99[v300](v21(v99,v300 + 1 ,v94))};v299=1;end if (v299==1) then v302=0;for v491=v300,v101[4] do local v492=0;while true do if (v492==0) then v302=v302 + 1 ;v99[v491]=v301[v302];break;end end end break;end end end elseif (v102<=(232 -162)) then if (v102>(443 -(123 + 251))) then if (v99[v101[2]]<v101[2 + 2 ]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[9 -7 ]]=v74[v101[3]];end elseif (v102==(125 -54)) then v99[v101[2]]=v73[v101[3]];else do return;end end elseif (v102<=(513 -(145 + 293))) then if (v102<=73) then local v162=0;local v163;local v164;while true do if (v162==1) then v99[v163 + 1 ]=v164;v99[v163]=v164[v101[4]];break;end if (v162==0) then v163=v101[2];v164=v99[v101[3]];v162=1;end end elseif (v102>(504 -(44 + 386))) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else local v307=0;local v308;while true do if (v307==0) then v308=v101[2];v99[v308](v99[v308 + 1 ]);break;end end end elseif (v102<=77) then if (v102>(1562 -(998 + 488))) then v99[v101[2]]=v101[3]~=0 ;else v93=v101[1 + 2 ];end elseif (v102>78) then local v311=0;local v312;local v313;local v314;while true do if (v311==0) then v312=v101[1 + 1 ];v313=v99[v312];v311=1;end if (v311==1) then v314=v101[3];for v493=1,v314 do v313[v493]=v99[v312 + v493 ];end break;end end else local v315=v101[2];local v316=v99[v101[839 -(660 + 176) ]];v99[v315 + 1 + 0 ]=v316;v99[v315]=v316[v99[v101[1 + 3 ]]];end elseif (v102<=92) then if (v102<=85) then if (v102<=(284 -(14 + 188))) then if (v102<=80) then local v165=0;local v166;local v167;while true do if (v165==1) then for v394=v166 + 1 ,v101[3] do v15(v167,v99[v394]);end break;end if (v165==0) then v166=v101[2];v167=v99[v166];v165=1;end end elseif (v102==(756 -(534 + 141))) then local v320=0;local v321;while true do if (v320==0) then v321=v101[2];v99[v321]=v99[v321](v99[v321 + 1 ]);break;end end else v99[v101[2 + 0 ]]=v99[v101[3]] + v101[4] ;end elseif (v102<=83) then local v168=v101[2];local v169={};for v180=1, #v98 do local v181=0;local v182;while true do if (v181==0) then v182=v98[v180];for v437=0, #v182 do local v438=0;local v439;local v440;local v441;while true do if (0==v438) then v439=v182[v437];v440=v439[1];v438=1;end if (1==v438) then v441=v439[2];if ((v440==v99) and (v441>=v168)) then v169[v441]=v440[v441];v439[1]=v169;end break;end end end break;end end end elseif (v102>84) then local v323=0;local v324;local v325;local v326;while true do if (v323==1) then v326=v99[v324 + 2 ];if (v326>0) then if (v325>v99[v324 + (773 -(201 + 571)) ]) then v93=v101[3];else v99[v324 + (1141 -(116 + 1022)) ]=v325;end elseif (v325<v99[v324 + 1 ]) then v93=v101[3];else v99[v324 + 3 ]=v325;end break;end if (v323==0) then v324=v101[2];v325=v99[v324];v323=1;end end else v99[v101[8 -6 ]][v99[v101[2 + 1 ]]]=v99[v101[4]];end elseif (v102<=88) then if (v102<=86) then local v170=v101[2];v99[v170]=v99[v170]();elseif (v102>87) then local v329=0;local v330;local v331;local v332;while true do if (v329==0) then v330=v101[2];v331=v99[v330 + 2 ];v329=1;end if (v329==2) then if (v331>0) then if (v332<=v99[v330 + 1 ]) then v93=v101[10 -7 ];v99[v330 + 3 ]=v332;end elseif (v332>=v99[v330 + 1 ]) then v93=v101[2 + 1 ];v99[v330 + 3 ]=v332;end break;end if (v329==1) then v332=v99[v330] + v331 ;v99[v330]=v332;v329=2;end end else local v333=0;local v334;local v335;local v336;while true do if (0==v333) then v334=v101[2];v335=v99[v334 + 2 ];v333=1;end if (v333==1) then v336=v99[v334] + v335 ;v99[v334]=v336;v333=2;end if (v333==2) then if (v335>(0 + 0)) then if (v336<=v99[v334 + 1 ]) then local v531=0;while true do if (v531==0) then v93=v101[3];v99[v334 + 3 ]=v336;break;end end end elseif (v336>=v99[v334 + 1 ]) then local v532=0;while true do if (0==v532) then v93=v101[3 + 0 ];v99[v334 + 3 ]=v336;break;end end end break;end end end elseif (v102<=90) then if (v102>(315 -226)) then if (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]={};end elseif (v102>91) then if (v101[861 -(814 + 45) ]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[4 -1 ];end elseif  not v99[v101[2]] then v93=v93 + (2 -1) ;else v93=v101[3];end elseif (v102<=99) then if (v102<=95) then if (v102<=93) then local v172=v101[2];local v173=v99[v172];for v183=v172 + 1 ,v94 do v15(v173,v99[v183]);end elseif (v102==94) then v99[v101[2]][v101[3]]=v101[4];else do return;end end elseif (v102<=(53 + 44)) then if (v102==96) then v99[v101[2]]=v99[v101[7 -4 ]]%v101[4] ;else v99[v101[2]]=v40(v90[v101[3]],nil,v74);end elseif (v102>(6 + 92)) then if v99[v101[2 + 0 ]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v99[v101[1 + 1 ]]==v101[4]) then v93=v93 + 1 ;else v93=v101[399 -(115 + 281) ];end elseif (v102<=102) then if (v102<=100) then v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;elseif (v102==101) then v74[v101[3]]=v99[v101[2]];else v99[v101[2]][v101[6 -3 ]]=v99[v101[4]];end elseif (v102<=104) then if (v102==103) then local v346=v101[887 -(261 + 624) ];local v347=v101[4];local v348=v346 + 2 ;local v349={v99[v346](v99[v346 + 1 ],v99[v348])};for v381=1,v347 do v99[v348 + v381 ]=v349[v381];end local v350=v349[1];if v350 then local v401=0;while true do if (v401==0) then v99[v348]=v350;v93=v101[3];break;end end else v93=v93 + 1 ;end else v99[v101[2]]=v99[v101[3]]%v99[v101[4 + 0 ]] ;end elseif (v102>105) then v99[v101[3 -1 ]]();else local v352=0;local v353;local v354;local v355;local v356;while true do if (v352==1) then v94=(v355 + v353) -1 ;v356=0;v352=2;end if (v352==0) then v353=v101[4 -2 ];v354,v355=v92(v99[v353](v21(v99,v353 + 1 ,v101[3])));v352=1;end if (v352==2) then for v496=v353,v94 do local v497=0;while true do if (v497==0) then v356=v356 + (3 -2) ;v99[v496]=v354[v356];break;end end end break;end end end v93=v93 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return v23("LOL!0D3O0003063O00737472696E6703043O006368617203043O00627974652O033O0073756203053O0062697433322O033O0062697403043O0062786F7203053O007461626C6503063O00636F6E63617403063O00696E7365727403053O006D6174636803083O00746F6E756D62657203053O007063612O6C00243O0012453O00013O0020395O0002001245000100013O002039000100010003001245000200013O002039000200020004001245000300053O00062O0003000A0001000100040C3O000A0001001245000300063O002039000400030007001245000500083O002039000500050009001245000600083O00203900060006000A00060E00073O000100062O00373O00064O00378O00373O00044O00373O00014O00373O00024O00373O00053O001245000800013O00203900080008000B0012450009000C3O001245000A000D3O00060E000B0001000100052O00373O00074O00373O00094O00373O00084O00373O000A4O00373O000B4O0008000C000B4O0011000C00014O0002000C6O005F3O00013O00023O00023O00026O00F03F026O00704002264O005900025O001223000300014O002700045O001223000500013O00043A0003002100012O004700076O0008000800024O0047000900014O0047000A00024O0047000B00034O0047000C00044O0008000D6O0008000E00063O002040000F000600012O002C000C000F4O000D000B3O00022O0047000C00034O0047000D00044O0008000E00014O0027000F00014O0068000F0006000F001030000F0001000F2O0027001000014O00680010000600100010300010000100100020400010001000012O002C000D00104O002B000C6O000D000A3O0002002015000A000A00022O00240009000A4O001C00073O00010004580003000500012O0047000300054O0008000400024O0028000300044O000200036O005F3O00017O00043O00027O004003053O003A25642B3A2O033O0025642B026O00F03F001C3O00060E5O000100012O00298O0047000100014O0047000200024O0047000300024O005900046O0047000500034O000800066O003D000700074O002C000500074O005D00043O0001002039000400040001001223000500024O0034000300050002001223000400034O002C000200044O000D00013O0002002610000100180001000400040C3O001800012O000800016O005900026O0028000100024O000200015O00040C3O001B00012O0047000100044O0011000100014O000200016O005F3O00013O00013O0049012O0003123O0069735F736972687572745F636C6F7375726503073O0033FA394A15E13F03043O002260934B030C3O00706562635F65786563757465030C3O00E7180D3ED631B7C2C402073803083O00A3B76A624AB962DA2O033O0073796E03093O002AB3C53D37F5DB772103083O005779CAAB5C4786BE030B3O007365637572655F6C6F616403083O001AC4229C20CF298403043O00E849A14C030B3O004B524E4C5F4C4F4144454403043O0090CB4C5103053O007EDBB9223D030B3O00534F4E415F4C4F4144454403043O003FC1507303083O00876CAE3E121E179303153O009DE02E8B0FA727CFF6FA22C20CEE36DFA6E525C20C03083O00A7D6894AAB78CE5303793O0083E4264DEBFDC4BF3654EBA484E23613FBA886BF334DF1E89CF53055F7A880E37D0CAAF0D9A96405A8F1DCA46604AFF2D8A7630FB7B29AFC3A5FDEA993DA2770ECB492F60151FDBEDFDC3C50DAF5AAE0080BA1A286C2216CF5A098A32270F3F2D9C4190EA080B8D2207AEB80A7FF0A08FBA886F73E05D6BF8703063O00C7EB90523D9803073O000419B73F0218AD03043O004B6776D903393O00F45B7D11B610C2147815AA5EC24C7517AC0AC250301DBA17CE14731CBC1FD347304EF93CC2145E249A5EC8462O30903B8B146317AB17D7403103063O007EA7341074D903043O0067616D65030A3O0047657453657276696365030B3O00E03A3490871CEEDE27238503073O009CA84E40E0D479030A3O004A534F4E456E636F6465030C3O0004E1ABDA02E0B18313F7B5CB03043O00AE678EC503103O0057384F342C5DF9422150366A54EB592603073O009836483F58453E03073O0072657175657374030C3O00682O74705F7265717565737403083O00482O7470506F73742O033O00E1D6E203043O003CB4A48E03043O007A51013003073O0072383E6549478D03063O0095ECCFCCB7ED03043O00A4D889BB03043O00E2C9028603073O006BB28651D2C69E03073O00100B83C2AF2A1D03053O00CA586EE2A6030A3O006C6F6164737472696E6703073O00482O7470476574031C3O00CB1B96E7D99940CDE4C3D10697E484CE0A8CE285D10E9BF1C3C6038603053O00AAA36FE297030C3O0043726561746557696E646F7703043O003F31BF3D03073O00497150D2582E5703123O00882FC41BE3843A8D3CD7A26CEE3AC2A0188D03053O0087E14CAD72030C3O0036E2B9B4A5B3A02EE4ACBCA903073O00C77A8DD8D0CCDD03143O0083ED33B05BDE88FC24B07AEFEDD413F971F2A8CB03063O0096CDBD709018030F3O00098BBE480D8616233086AB4510841403083O007045E4DF2C64E871030A3O00D60647DAB5758FD01A1103073O00E6B47F67B3D61C03133O00AF0A5140ED46F59E044B4FEB4FD38D135648E303073O0080EC653F26842103073O0089A71046BAEECB03073O00AFCCC97124D68B0100030A3O0061C339D80155E234D10103053O006427AC55BC0003083O008B71B5851DAC75BC03053O0053CD18D9E0030B3O00EFC1C82BF5C6DF34F6D1DE03043O005D86A5AD03073O009AFBD2C135DCB603083O001EDE92A1A25AAED203073O00C0407108E94B7403043O006A852E102O0103063O00712E65F54E4503063O00203840139C3A030A3O0062F2E86678FF857FEBE703073O00E03AA885363A92030D3O006B5346F878848219735942F36603083O006B39362B9D15E6E703093O00F08E08C6A0CFDBDE8603073O00AFBBEB7195D9BC030B3O0017AA987FE66D6C35A1865F03073O00185CCFE12C831903053O007FDAAC401E03063O001D2BB3D82C7B03093O0094DA2945FDF22555AE03043O002CDDB94003083O0032F24A4B7A15EB4D03053O00136187283F030A3O0085592A7B1C28BD482O3603063O0051CE3C535B4F03043O0060A4C47703083O00C42ECBB0124FA32D03163O0088376C1D2CFAFCBD626A1164F4EDAC23771064F0EAA103073O008FD8421E7E449B03083O008CC101CEEBA2DAE403083O0081CAA86DABA5C3B7030A3O002B5B3ED1DA11F0095D2E03073O0086423857B8BE7403073O000F301FBE32EE3803083O00555C5169DB798B41030F3O00DAA1514757DAE495424A71ECF4A75503063O00BF9DD330251C2O033O00F41AED03053O005ABF7F947C03063O002BD677452FD303043O007718E74E03063O00D775F71A8D1303073O0071E24DC52ABC2003063O006D42A2E4634E03043O00D55A769403063O000A77E706190C03053O002D3B4ED43603063O004804D3D8D07A03083O00907036E3EBE64ECD03063O00E77F57AE830D03063O003BD3486F9CB003063O0017D7B07819D503043O004D2EE78303063O00EC05E314E20D03043O0020DA34D603063O001D4566FEA4E103083O003A2E7751C891D02503063O0073D560F8FEEF03073O00564BEC50CCC9DD03063O00261222D2A8DA03063O00EB122117E59E03063O0002ED90E200E203043O00DB30DAA103063O00BD242A1E891C03073O008084111C29BB2F03063O00506A546A095803053O003D6152665A03063O00FF79FF1D920603083O0069CC4ECB2BA7377E03063O00F0F97A46415403083O0031C5CA437E7364A703063O006009877AD60203073O003E573BBF49E03603063O00B15AA898B05703043O00A987629A03063O009A27700CA46103073O00A8AB1744349D5303063O00A128A6FB727C03073O00E7941195CD454D03063O00D3F590AF02AF03063O009FE0C7A79B3703063O00AFA46C83A5A603043O00B297935C03063O00DAA8186A4B1C03073O001AEC9D2C52722C03063O007D7A84097C7D03043O003B4A4EB503063O0070880902E77403053O00D345B12O3A03063O00EFB620A7B99E03063O00ABD78519958903063O00B79A66ADBE6903083O002281A8529A8F509C03063O00D1E5665A101C03073O00E9E5D2536B282E03063O0098126080569503053O0065A12252B603063O00B9550EAA8EB003083O004E886D399EBB82E203093O0043726561746554616203043O0015362OFA03043O00915E5F9903083O00C9C818D05EB8EFD903063O00D79DAD74B52E03083O0018BB9DF7D730BA9F03053O00BA55D4EB9203063O00F48805EB38E203073O0038A2E1769E598E030D3O0043726561746553656374696F6E03103O006800CCAA32D74E11809C27DB480CCFA103063O00B83C65A0CF42030E3O00078B6FA9308E3C8F348168B53E8C03043O00DC51E21C03103O003EDA94FEE7C21DC1C2C8EFC407DC8DF503063O00A773B5E29B8A030C3O00C92BE4573B42C3E136EE537503073O00A68242873C1B1103063O004E6F7469667903053O007043DA793503053O0050242AAE1503133O006B0832795B04327E0E043F7F0E23346847002303043O001A2E705703073O009A2CA560BAB15103083O00D4D943CB142ODF25030A3O00B894E8DBB984A1D6BF9B03043O00B2DAEDC803083O0092A0F4D1A2BCE9DE03043O00B0D6D586026O000C4003053O00DDA0B7D3AD03073O003994CDD6B4C83603073O0033FE213D791CEE03053O0016729D555403063O00EDCC1DCB4FF303073O00C8A4AB73A43D9603043O0090F50E4003053O00E3DE94632503053O001C5953EFB803053O0099532O329603083O007E777F1071AA4E5603073O002D3D16137C13CB026O00144003083O006B69636B46756E63030C3O0043726561746542752O746F6E03043O00F5D0235903063O0037BBB14E3C4F030B3O0006C75CE006FF8C2CD75AF903073O00E04DAE3F8B26AF03083O00A740542286405B2503043O004EE42138030B3O00437265617465496E70757403043O00E07FBF0603053O00E5AE1ED263030B3O002FE88A54FD322B0FADB25E03073O00597B8DE6318D5D030F3O00C37DF70F1542FC7DF209027EF669E203063O002A9311966C7003063O001FAA2C66E2FA03063O00886FC64D1F8703183O00300CAA59ABE123AC1A1D8650A9E1058F0D0AB24591EB04BD03083O00C96269C736DD847703083O009A0D8F2D0034AFB203073O00CCD96CE3416255030C3O00437265617465536C6964657203043O0070C2F8E003063O00A03EA395854C030A3O00E1A1012483E5B0082AC703053O00A3B6C06D4F03053O0006270EC7F003053O0095544660A0028O00025O00407F4003093O0011080EFF3D0B08E32C03043O008D58666D026O00244003063O008046CC76132503083O00A1D333AA107A5D35030A3O00ECAFBE23BBBDA22DFEAA03043O00489BCED2030C3O00656F461C36486E620F3F537F03053O0053261A346E03043O007E1B264103043O002638774703073O00C0E351D22044A203063O0036938F38B64503083O00F580F345DDD782F403053O00BFB6E19F2903043O00A23D49E703063O0062EC5C248233030A3O008E0C01AA0598BA27A10B03083O0050C4796CDA25C8D503053O0032720C784E03073O00EA6013621F2B6E03093O002F1151D5A97F8E080B03073O00EB667F32A7CC1203063O0063B4F3254D3603063O004E30C1954324030A3O003A0B8D08012011971D5303053O0021507EE078030C3O00CFBD11D659E2BC35C550F9AD03053O003C8CC863A403043O00A1F8052103053O00C2E794644603073O007540C8A7F3DA1703063O00A8262CA1C39603083O00A3FD8E7A32E9B51D03083O0076E09CE2165088D603053O00F9B5C0D87D03083O006EBEC7A5BD13913D03063O00436F6C6F723303073O0066726F6D524742025O00E06F4003043O00F8E762ED03063O00A7BA8B1788EB2O033O0028B08C03043O006D7AD5E803063O00D7F2AE3CE1E003043O00508E97C203063O002CD4764204C303043O002C63A617025O00A0644003063O004CE23B263FA103063O00C41C97495653026O0060402O033O0052656403023O005F4703093O00455350546F2O676C6503073O00C30F2809874A0B03083O001693634970E23878030B3O004C6F63616C506C61796572030A3O008A60ECC688AA63EBF68803053O00EDD815829503103O00B75D5A4D99C74E975A6C5AA2DF57814B03073O003EE22E2O3FD0A903093O00D21647880C1D2E5DE003083O003E857935E37F6D4F030D3O0052656E6465725374652O70656403073O00436F2O6E656374030B3O00506C61796572412O646564030E3O00506C6179657252656D6F76696E67030C3O00437265617465546F2O676C6503043O00AA29ABC403073O00D2E448C6A1B833030A3O000246F4177FCB766CC02003063O00AE5629937013030C3O0078159F192001059D5A0C980E03083O00CB3B60ED6B456F7103043O00021AADE603073O00B74476CC81519003073O003AA277E307875F03063O00E26ECD10846B03083O00C8C2ECD543EAC0EB03053O00218BA380B9026O00F03F0166032O00064B3O006303013O00040C3O00630301001245000100013O00064B0001000B00013O00040C3O000B00012O004700015O001223000200023O001223000300034O003400010003000200062O0001003C0001000100040C3O003C0001001245000100043O00064B0001001400013O00040C3O001400012O004700015O001223000200053O001223000300064O003400010003000200062O0001003C0001000100040C3O003C0001001245000100073O00064B0001001D00013O00040C3O001D00012O004700015O001223000200083O001223000300094O003400010003000200062O0001003C0001000100040C3O003C00010012450001000A3O00064B0001002600013O00040C3O002600012O004700015O0012230002000B3O0012230003000C4O003400010003000200062O0001003C0001000100040C3O003C00010012450001000D3O00064B0001002F00013O00040C3O002F00012O004700015O0012230002000E3O0012230003000F4O003400010003000200062O0001003C0001000100040C3O003C0001001245000100103O00064B0001003800013O00040C3O003800012O004700015O001223000200113O001223000300124O003400010003000200062O0001003C0001000100040C3O003C00012O004700015O001223000200133O001223000300144O00340001000300022O004700025O001223000300153O001223000400164O00340002000400022O005900033O00012O004700045O001223000500173O001223000600184O00340004000600022O004700055O001223000600193O0012230007001A4O00340005000700022O00540003000400050012450004001B3O00204900040004001C2O004700065O0012230007001D3O0012230008001E4O002C000600084O000D00043O000200204900040004001F2O0008000600034O00340004000600022O005900053O00012O004700065O001223000700203O001223000800214O00340006000800022O004700075O001223000800223O001223000900234O00340007000900022O0054000500060007001245000600253O00062O000600690001000100040C3O00690001001245000600243O00062O000600690001000100040C3O00690001001245000600263O00062O000600690001000100040C3O00690001001245000600073O002039000600060024001265000600244O005900063O00042O004700075O001223000800273O001223000900284O00340007000900022O00540006000700022O004700075O001223000800293O0012230009002A4O00340007000900022O00540006000700042O004700075O0012230008002B3O0012230009002C4O00340007000900022O004700085O0012230009002D3O001223000A002E4O00340008000A00022O00540006000700082O004700075O0012230008002F3O001223000900304O00340007000900022O0054000600070005001245000700244O0008000800064O004A000700020001001245000700313O0012450008001B3O0020490008000800322O0047000A5O001223000B00333O001223000C00344O002C000A000C4O002B00086O000D00073O00022O001E0007000100020020490008000700352O0059000A3O00072O0047000B5O001223000C00363O001223000D00374O0034000B000D00022O0047000C5O001223000D00383O001223000E00394O0034000C000E00022O0054000A000B000C2O0047000B5O001223000C003A3O001223000D003B4O0034000B000D00022O0047000C5O001223000D003C3O001223000E003D4O0034000C000E00022O0054000A000B000C2O0047000B5O001223000C003E3O001223000D003F4O0034000B000D00022O0047000C5O001223000D00403O001223000E00414O0034000C000E00022O0054000A000B000C2O0047000B5O001223000C00423O001223000D00434O0034000B000D00022O0059000C3O00032O0047000D5O001223000E00443O001223000F00454O0034000D000F0002002003000C000D00462O0047000D5O001223000E00473O001223000F00484O0034000D000F0002002003000C000D00492O0047000D5O001223000E004A3O001223000F004B4O0034000D000F00022O0047000E5O001223000F004C3O0012230010004D4O0034000E001000022O0054000C000D000E2O0054000A000B000C2O0047000B5O001223000C004E3O001223000D004F4O0034000B000D00022O0059000C3O00032O0047000D5O001223000E00503O001223000F00514O0034000D000F0002002003000C000D00522O0047000D5O001223000E00533O001223000F00544O0034000D000F00022O0047000E5O001223000F00553O001223001000564O0034000E001000022O0054000C000D000E2O0047000D5O001223000E00573O001223000F00584O0034000D000F0002002003000C000D00522O0054000A000B000C2O0047000B5O001223000C00593O001223000D005A4O0034000B000D0002002003000A000B00522O0047000B5O001223000C005B3O001223000D005C4O0034000B000D00022O0059000C3O00072O0047000D5O001223000E005D3O001223000F005E4O0034000D000F00022O0047000E5O001223000F005F3O001223001000604O0034000E001000022O0054000C000D000E2O0047000D5O001223000E00613O001223000F00624O0034000D000F00022O0047000E5O001223000F00633O001223001000644O0034000E001000022O0054000C000D000E2O0047000D5O001223000E00653O001223000F00664O0034000D000F00022O0047000E5O001223000F00673O001223001000684O0034000E001000022O0054000C000D000E2O0047000D5O001223000E00693O001223000F006A4O0034000D000F00022O0047000E5O001223000F006B3O0012230010006C4O0034000E001000022O0054000C000D000E2O0047000D5O001223000E006D3O001223000F006E4O0034000D000F0002002003000C000D00522O0047000D5O001223000E006F3O001223000F00704O0034000D000F0002002003000C000D00462O0047000D5O001223000E00713O001223000F00724O0034000D000F00022O0059000E00174O0047000F5O001223001000733O001223001100744O0034000F001100022O004700105O001223001100753O001223001200764O00340010001200022O004700115O001223001200773O001223001300784O00340011001300022O004700125O001223001300793O0012230014007A4O00340012001400022O004700135O0012230014007B3O0012230015007C4O00340013001500022O004700145O0012230015007D3O0012230016007E4O00340014001600022O004700155O0012230016007F3O001223001700804O00340015001700022O004700165O001223001700813O001223001800824O00340016001800022O004700175O001223001800833O001223001900844O00340017001900022O004700185O001223001900853O001223001A00864O00340018001A00022O004700195O001223001A00873O001223001B00884O00340019001B00022O0047001A5O001223001B00893O001223001C008A4O0034001A001C00022O0047001B5O001223001C008B3O001223001D008C4O0034001B001D00022O0047001C5O001223001D008D3O001223001E008E4O0034001C001E00022O0047001D5O001223001E008F3O001223001F00904O0034001D001F00022O0047001E5O001223001F00913O001223002000924O0034001E002000022O0047001F5O001223002000933O001223002100944O0034001F002100022O004700205O001223002100953O001223002200964O00340020002200022O004700215O001223002200973O001223002300984O00340021002300022O004700225O001223002300993O0012230024009A4O00340022002400022O004700235O0012230024009B3O0012230025009C4O00340023002500022O004700245O0012230025009D3O0012230026009E4O00340024002600022O004700255O0012230026009F3O001223002700A04O00340025002700022O004700265O001223002700A13O001223002800A24O00340026002800022O004700275O001223002800A33O001223002900A44O00340027002900022O004700285O001223002900A53O001223002A00A64O00340028002A00022O004700295O001223002A00A73O001223002B00A84O00340029002B00022O0047002A5O001223002B00A93O001223002C00AA4O0034002A002C00022O0047002B5O001223002C00AB3O001223002D00AC4O0034002B002D00022O0047002C5O001223002D00AD3O001223002E00AE4O002C002C002E4O005D000E3O00012O0054000C000D000E2O0054000A000B000C2O00340008000A00020020490009000800AF2O0047000B5O001223000C00B03O001223000D00B14O0034000B000D00022O003D000C000C4O00340009000C0002002049000A000800AF2O0047000C5O001223000D00B23O001223000E00B34O0034000C000E00022O003D000D000D4O0034000A000D0002002049000B000800AF2O0047000D5O001223000E00B43O001223000F00B54O0034000D000F00022O003D000E000E4O0034000B000E0002002049000C000800AF2O0047000E5O001223000F00B63O001223001000B74O0034000E001000022O003D000F000F4O0034000C000F0002002049000D000A00B82O0047000F5O001223001000B93O001223001100BA4O002C000F00114O000D000D3O0002002049000E000A00B82O004700105O001223001100BB3O001223001200BC4O002C001000124O000D000E3O0002002049000F000B00B82O004700115O001223001200BD3O001223001300BE4O002C001100134O000D000F3O00020020490010000900B82O004700125O001223001300BF3O001223001400C04O002C001200144O000D00103O00020020490011000700C12O005900133O00052O004700145O001223001500C23O001223001600C34O00340014001600022O004700155O001223001600C43O001223001700C54O00340015001700022O00540013001400152O004700145O001223001500C63O001223001600C74O00340014001600022O004700155O001223001600C83O001223001700C94O00340015001700022O00540013001400152O004700145O001223001500CA3O001223001600CB4O00340014001600020020030013001400CC2O004700145O001223001500CD3O001223001600CE4O00340014001600020020030013001400492O004700145O001223001500CF3O001223001600D04O00340014001600022O005900153O00012O004700165O001223001700D13O001223001800D24O00340016001800022O005900173O00022O004700185O001223001900D33O001223001A00D44O00340018001A00022O004700195O001223001A00D53O001223001B00D64O00340019001B00022O00540017001800192O004700185O001223001900D73O001223001A00D84O00340018001A000200060E00193O000100012O00298O00540017001800192O00540015001600172O00540013001400152O0042001100130001001223001100D93O00060E00120001000100012O00297O001265001200DA3O0020490012000900DB2O005900143O00022O004700155O001223001600DC3O001223001700DD4O00340015001700022O004700165O001223001700DE3O001223001800DF4O00340016001800022O00540014001500162O004700155O001223001600E03O001223001700E14O003400150017000200060E00160002000100012O00373O00114O00540014001500162O00340012001400020020490013000A00E22O005900153O00042O004700165O001223001700E33O001223001800E44O00340016001800022O004700175O001223001800E53O001223001900E64O00340017001900022O00540015001600172O004700165O001223001700E73O001223001800E84O00340016001800022O004700175O001223001800E93O001223001900EA4O00340017001900022O00540015001600172O004700165O001223001700EB3O001223001800EC4O00340016001800020020030015001600462O004700165O001223001700ED3O001223001800EE4O0034001600180002000261001700034O00540015001600172O00340013001500020020490014000B00EF2O005900163O00072O004700175O001223001800F03O001223001900F14O00340017001900022O004700185O001223001900F23O001223001A00F34O00340018001A00022O00540016001700182O004700175O001223001800F43O001223001900F54O00340017001900022O0059001800023O001223001900F63O001223001A00F74O003F0018000200012O00540016001700182O004700175O001223001800F83O001223001900F94O00340017001900020020030016001700FA2O004700175O001223001800FB3O001223001900FC4O00340017001900022O004700185O001223001900FD3O001223001A00FE4O00340018001A00022O00540016001700182O004700175O001223001800FF3O00122300192O00013O0034001700190002001223001800FA4O00540016001700182O004700175O0012230018002O012O00122300190002013O00340017001900022O004700185O00122300190003012O001223001A0004013O00340018001A00022O00540016001700182O004700175O00122300180005012O00122300190006013O003400170019000200060E00180004000100012O00298O00540016001700182O00340014001600020020490015000B00EF2O005900173O00072O004700185O00122300190007012O001223001A0008013O00340018001A00022O004700195O001223001A0009012O001223001B000A013O00340019001B00022O00540017001800192O004700185O0012230019000B012O001223001A000C013O00340018001A00022O0059001900023O001223001A00F63O001223001B00F74O003F0019000200012O00540017001800192O004700185O0012230019000D012O001223001A000E013O00340018001A0002001223001900FA4O00540017001800192O004700185O0012230019000F012O001223001A0010013O00340018001A00022O004700195O001223001A0011012O001223001B0012013O00340019001B00022O00540017001800192O004700185O00122300190013012O001223001A0014013O00340018001A0002001223001900FA4O00540017001800192O004700185O00122300190015012O001223001A0016013O00340018001A00022O004700195O001223001A0017012O001223001B0018013O00340019001B00022O00540017001800192O004700185O00122300190019012O001223001A001A013O00340018001A000200060E00190005000100012O00298O00540017001800192O0034001500170002000261001600064O005900173O00062O004700185O0012230019001B012O001223001A001C013O00340018001A00020012450019001D012O001223001A001E013O002200190019001A001223001A00F63O001223001B001F012O001223001C00F64O00340019001C00022O00540017001800192O004700185O00122300190020012O001223001A0021013O00340018001A00020012450019001D012O001223001A001E013O002200190019001A001223001A00F63O001223001B00F63O001223001C001F013O00340019001C00022O00540017001800192O004700185O00122300190022012O001223001A0023013O00340018001A00020012450019001D012O001223001A001E013O002200190019001A001223001A001F012O001223001B00F63O001223001C00F64O00340019001C00022O00540017001800192O004700185O00122300190024012O001223001A0025013O00340018001A00020012450019001D012O001223001A001E013O002200190019001A001223001A001F012O001223001B001F012O001223001C00F64O00340019001C00022O00540017001800192O004700185O00122300190026012O001223001A0027013O00340018001A00020012450019001D012O001223001A001E013O002200190019001A001223001A001F012O001223001B0028012O001223001C00F64O00340019001C00022O00540017001800192O004700185O00122300190029012O001223001A002A013O00340018001A00020012450019001D012O001223001A001E013O002200190019001A001223001A002B012O001223001B00F63O001223001C002B013O00340019001C00022O00540017001800190012230018002C013O00220018001700180012450019002D012O001223001A002E013O0014001B6O00540019001A001B0012450019001B3O00204900190019001C2O0047001B5O001223001C002F012O001223001D0030013O002C001B001D4O000D00193O0002001223001A0031013O0022001A0019001A001245001B001B3O002049001B001B001C2O0047001D5O001223001E0032012O001223001F0033013O002C001D001F4O000D001B3O0002001245001C001B3O002049001C001C001C2O0047001E5O001223001F0034012O00122300200035013O002C001E00204O000D001C3O0002001245001D001B3O002049001D001D001C2O0047001F5O00122300200036012O00122300210037013O002C001F00214O000D001D3O000200060E001E0007000100032O00298O00373O00184O00373O001A3O00060E001F0008000100012O00297O00060E00200009000100042O00373O00194O00373O00164O00373O001E4O00373O001F3O00122300210038013O00220021001B002100122300230039013O004E00210021002300060E0023000A000100012O00373O00204O00420021002300010012230021003A013O002200210019002100122300230039013O004E00210021002300060E0023000B000100012O00373O001E4O00420021002300010012230021003B013O002200210019002100122300230039013O004E00210021002300060E0023000C000100012O00373O001F4O00420021002300010012230023003C013O004E0021000C00232O005900233O00042O004700245O0012230025003D012O0012230026003E013O00340024002600022O004700255O0012230026003F012O00122300270040013O00340025002700022O00540023002400252O004700245O00122300250041012O00122300260042013O00340024002600022O001400256O00540023002400252O004700245O00122300250043012O00122300260044013O00340024002600022O004700255O00122300260045012O00122300270046013O00340025002700022O00540023002400252O004700245O00122300250047012O00122300260048013O00340024002600020002610025000D4O00540023002400252O00340021002300022O005300015O00040C3O0065030100122300010049013O002200013O00012O005F3O00013O000E3O00033O0003053O007072696E7403153O00F51A08B51763BCD35219F41260BCC55222FE0369F803073O00D9A1726D95621000073O0012453O00014O004700015O001223000200023O001223000300034O002C000100034O001C5O00012O005F3O00017O00103O00028O00026O00F03F2O0103043O0067616D65030A3O004765745365727669636503113O0020252870B57713343D788F601D32397BB903063O00147240581CDC030C3O0057616974466F724368696C64030D3O00120EDFB9EDDEB43200C6BDF7DE03073O00DD5161B2D498B0030F3O00ECE409F20CC8D112EF1FC6EE1EF00903053O007AAD877D9B03083O00B7C40EBD093EDC8103073O00A8E4A160D95F51030A3O004669726553657276657203063O00756E7061636B00313O0012233O00014O003D000100023O0026100001002A0001000200040C3O002A0001002610000100040001000100040C3O000400012O005900033O000100305E0003000200032O0008000200033O001245000300043O0020490003000300052O004700055O001223000600063O001223000700074O002C000500074O000D00033O00020020490003000300082O004700055O001223000600093O0012230007000A4O002C000500074O000D00033O00020020490003000300082O004700055O0012230006000B3O0012230007000C4O002C000500074O000D00033O00020020490003000300082O004700055O0012230006000D3O0012230007000E4O002C000500074O000D00033O000200204900030003000F001245000500104O0008000600024O0024000500064O001C00033O000100040C3O0030000100040C3O0004000100040C3O00300001002610000100020001000100040C3O00020001001223000100014O003D000200023O001223000100023O00040C3O000200012O005F3O00017O00043O00028O00026O00144003083O006B69636B46756E63026O00F03F00163O0012233O00013O0026103O00010001000100040C3O000100012O004700015O002646000100110001000200040C3O00110001001223000100013O002610000100070001000100040C3O00070001001245000200034O006A0002000100012O004700025O0020400002000200042O002A00025O00040C3O0003000100040C3O0007000100040C3O00030001001223000100014O002A00015O00040C3O0015000100040C3O000100012O005F3O00017O00103O00028O00027O004003043O0077616974029A5O99B93F03063O00434672616D6503043O0067616D6503073O00506C617965727303093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274030B3O004C6F63616C506C61796572026O00F03F03083O0048756D616E6F6964030B3O004368616E6765537461746503043O00456E756D03113O0048756D616E6F696453746174655479706503073O004A756D70696E6701273O001223000100014O003D000200043O0026100001000F0001000200040C3O000F0001001245000500033O001223000600044O004A000500020001001245000500063O0020390005000500072O002200050005000300203900050005000800203900050005000900203900050005000500103600020005000500040C3O00260001002610000100180001000100040C3O00180001001245000500063O00203900050005000700203900050005000A0020390005000500080020390002000500092O000800035O0012230001000B3O002610000100020001000B00040C3O00020001001245000500063O00203900050005000700203900050005000A00203900050005000800203900040005000C00204900050004000D0012450007000E3O00203900070007000F0020390007000700102O0042000500070001001223000100023O00040C3O000200012O005F3O00017O000C3O00028O00026O00F03F027O0040030C3O0057616974466F724368696C6403083O00030725548588CB2F03073O00A24B724835EBE703043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O0057616C6B53702O656401303O001223000100014O003D000200053O002610000100070001000100040C3O00070001001223000200014O003D000300033O001223000100023O0026100001002A0001000300040C3O002A0001002610000200190001000200040C3O001900010020490006000400042O004700085O001223000900053O001223000A00064O002C0008000A4O000D00063O00022O0008000500063O001245000600073O00203900060006000800203900060006000900203900060006000A00203900060006000B0010360006000C3O00040C3O002F0001000E5C000100090001000200040C3O00090001001223000600013O002610000600230001000100040C3O00230001001245000700073O00203900070007000800203900030007000900203900040003000A001223000600023O0026100006001C0001000200040C3O001C0001001223000200023O00040C3O0009000100040C3O001C000100040C3O0009000100040C3O002F0001002610000100020001000200040C3O000200012O003D000400053O001223000100033O00040C3O000200012O005F3O00017O000B3O00028O00026O00F03F030C3O0057616974466F724368696C6403083O006AFB54814CE1508403043O00E0228E3903043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O004A756D70506F776572011B3O001223000100014O003D000200043O002610000100120001000200040C3O001200010020490005000300032O004700075O001223000800043O001223000900054O002C000700094O000D00053O00022O0008000400053O001245000500063O00203900050005000700203900050005000800203900050005000900203900050005000A0010360005000B3O00040C3O001A0001002610000100020001000100040C3O00020001001245000500063O002039000500050007002039000200050008002039000300020009001223000100023O00040C3O000200012O005F3O00017O00033O0003093O00576F726B7370616365030E3O0046696E6446697273744368696C6403043O004E616D6501063O001245000100013O00204900010001000200203900033O00032O0028000100034O000200016O005F3O00017O001D3O00028O00026O00F03F030E3O0046696E6446697273744368696C6403093O00381D35FDDAA7A5180003073O00C270745295B6CE03073O0041646F726E2O6503063O00506172656E74027O004003093O0044657074684D6F646503043O00456E756D03123O00486967686C6967687444657074684D6F6465030B3O00416C776179734F6E546F7003093O0046692O6C436F6C6F72026O00084003083O00496E7374616E63652O033O006E657703093O0011A14B10CCEB0931BC03073O006E59C82C78A08203043O004E616D6503093O0083CA4C4E4F433C45BF03083O002DCBA32B26232A5B030C3O004F75746C696E65436F6C6F7203063O00436F6C6F723303073O0066726F6D524742025O00E06F4003103O0046692O6C5472616E73706172656E6379026O00E03F03103O00FA90D12289A65DD6B7D32C939955C09103073O0034B2E5BC43E7C902543O001223000200014O003D000300043O002610000200070001000100040C3O00070001001223000300014O003D000400043O001223000200023O002610000200020001000200040C3O00020001002610000300420001000200040C3O0042000100064B0004005300013O00040C3O005300010020490005000400032O004700075O001223000800043O001223000900054O002C000700094O000D00053O000200062O000500530001000100040C3O00530001001223000500014O003D000600063O000E5C0002001C0001000500040C3O001C0001001036000600060001001036000600070004001223000500083O002610000500250001000800040C3O002500010012450007000A3O00203900070007000B00203900070007000C0010360006000900072O0047000700013O0010360006000D00070012230005000E3O002610000500350001000100040C3O003500010012450007000F3O0020390007000700102O004700085O001223000900113O001223000A00124O002C0008000A4O000D00073O00022O0008000600074O004700075O001223000800143O001223000900154O0034000700090002001036000600130007001223000500023O002610000500170001000E00040C3O00170001001245000700173O002039000700070018001223000800193O001223000900193O001223000A00194O00340007000A000200103600060016000700305E0006001A001B00040C3O0053000100040C3O0017000100040C3O00530001002610000300090001000100040C3O000900012O0047000500023O0006093O00480001000500040C3O004800012O005F3O00013O0020490005000100032O004700075O0012230008001C3O0012230009001D4O002C000700094O000D00053O00022O0008000400053O001223000300023O00040C3O0009000100040C3O0053000100040C3O000200012O005F3O00017O00083O00028O00026O00F03F030E3O0046696E6446697273744368696C6403103O0009545D05F9532A25735F0BE36C22335503073O004341213064973C03093O00F7EEA9D0FFD6E0A6CC03053O0093BF87CEB803073O0044657374726F7901233O001223000100014O003D000200033O002610000100070001000100040C3O00070001001223000200014O003D000300033O001223000100023O002610000100020001000200040C3O00020001002610000200090001000100040C3O0009000100204900043O00032O004700065O001223000700043O001223000800054O002C000600084O000D00043O00022O0008000300043O00064B0003002200013O00040C3O002200010020490004000300032O004700065O001223000700063O001223000800074O002C000600084O000D00043O000200064B0004002200013O00040C3O002200010020490005000400082O004A00050002000100040C3O0022000100040C3O0009000100040C3O0022000100040C3O000200012O005F3O00017O00063O0003053O007061697273030A3O00476574506C6179657273028O00026O00F03F03023O005F4703093O00455350546F2O676C65002A3O0012453O00014O004700015O0020490001000100022O0024000100024O00445O000200040C3O00270001001223000500034O003D000600073O002610000500210001000400040C3O002100010026100006000A0001000300040C3O000A00012O0047000800014O0008000900044O001D0008000200022O0008000700083O00064B0007002700013O00040C3O00270001001245000800053O00203900080008000600064B0008001B00013O00040C3O001B00012O0047000800024O0008000900044O0008000A00074O00420008000A000100040C3O002700012O0047000800034O0008000900074O004A00080002000100040C3O0027000100040C3O000A000100040C3O00270001002610000500080001000300040C3O00080001001223000600034O003D000700073O001223000500043O00040C3O000800010006673O00060001000200040C3O000600012O005F3O00019O003O00034O00478O006A3O000100012O005F3O00017O00023O00030E3O00436861726163746572412O64656403073O00436F2O6E65637401073O00203900013O000100204900010001000200060E00033O000100022O00298O00378O00420001000300012O005F3O00013O00013O00023O0003023O005F4703093O00455350546F2O676C6501093O001245000100013O00203900010001000200064B0001000800013O00040C3O000800012O004700016O0047000200014O000800036O00420001000300012O005F3O00017O00023O00028O0003093O00436861726163746572010D3O001223000100014O003D000200023O002610000100020001000100040C3O0002000100203900023O000200064B0002000C00013O00040C3O000C00012O004700036O0008000400024O004A00030002000100040C3O000C000100040C3O000200012O005F3O00017O00023O0003023O005F4703093O00455350546F2O676C6501033O001245000100013O001036000100024O005F3O00017O00",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
