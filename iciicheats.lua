local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\252\125","\229\210\83\107\40\46\93\101"),function(v42) if (v9(v42,2)==79) then local v99=0;while true do if (v99==0) then v30=v8(v11(v42,1,1));return "";end end else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v120=0;local v121;while true do if (0==v120) then v121=v13(v101,v30);v30=nil;v120=1;end if (v120==1) then return v121;end end else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (v102==0) then v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-(2 -1)) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (493 -237)) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + (7 -4) );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=v34();local v54=v34();local v55=1;local v56=(v31(v54,620 -(555 + 64) ,20) * (2^(963 -(857 + 74)))) + v53 ;local v57=v31(v54,21,31);local v58=((v31(v54,32)==1) and  -1) or (569 -(367 + 201)) ;if (v57==0) then if (v56==0) then return v58 * 0 ;else local v109=0;while true do if (v109==0) then v57=1;v55=927 -(214 + 713) ;break;end end end elseif (v57==2047) then return ((v56==0) and (v58 * (1/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end local function v36(v59) local v60=0;local v61;local v62;while true do if (v60==2) then v62={};for v110=1, #v61 do v62[v110]=v10(v9(v11(v61,v110,v110)));end v60=3;end if (v60==1) then v61=v11(v27,v29,(v29 + v59) -1 );v29=v29 + v59 ;v60=2;end if (v60==0) then v61=nil;if  not v59 then v59=v34();if (v59==0) then return "";end end v60=1;end if (v60==3) then return v14(v62);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v76=1,v67 do local v77=v32();local v78;if (v77==1) then v78=v32()~=0 ;elseif (v77==2) then v78=v35();elseif (v77==3) then v78=v36();end v68[v76]=v78;end v66[3]=v32();for v80=878 -(282 + 595) ,v34() do local v81=0;local v82;while true do if (v81==0) then v82=v32();if (v31(v82,1,1)==(1637 -(1523 + 114))) then local v116=0;local v117;local v118;local v119;while true do if (v116==1) then v119={v33(),v33(),nil,nil};if (v117==0) then local v123=0;while true do if (v123==0) then v119[3 + 0 ]=v33();v119[4]=v33();break;end end elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3 -0 ]=v34() -((1067 -(68 + 997))^16) ;elseif (v117==3) then local v358=0;while true do if (0==v358) then v119[3]=v34() -(2^16) ;v119[1274 -(226 + 1044) ]=v33();break;end end end v116=2;end if (v116==2) then if (v31(v118,1,1)==1) then v119[2]=v68[v119[2]];end if (v31(v118,2,2)==(4 -3)) then v119[3]=v68[v119[3]];end v116=3;end if (0==v116) then v117=v31(v82,2,3);v118=v31(v82,4,6);v116=1;end if (v116==3) then if (v31(v118,3,3)==1) then v119[4]=v68[v119[121 -(32 + 85) ]];end v63[v80]=v119;break;end end end break;end end end for v83=1,v34() do v64[v83-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[2];local v75=v70[3];return function(...) local v85=v73;local v86=v74;local v87=v75;local v88=v38;local v89=1;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v106=0,v93 do if (v106>=v87) then v91[v106-v87 ]=v92[v106 + 1 ];else v95[v106]=v92[v106 + 1 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do v97=v85[v89];v98=v97[1];if (v98<=52) then if (v98<=25) then if (v98<=12) then if (v98<=5) then if (v98<=2) then if (v98<=0) then if (v95[v97[2]]<v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>1) then v72[v97[3]]=v95[v97[2]];else v95[v97[2 + 0 ]]=v71[v97[3]];end elseif (v98<=3) then for v180=v97[2],v97[3] do v95[v180]=nil;end elseif (v98>4) then if (v97[2]==v95[v97[4]]) then v89=v89 + 1 + 0 ;else v89=v97[3];end else v95[v97[2]]=v97[3] + v95[v97[4]] ;end elseif (v98<=8) then if (v98<=6) then v95[v97[959 -(892 + 65) ]]={};elseif (v98==7) then local v200=v97[2];local v201=v97[4];local v202=v200 + 2 ;local v203={v95[v200](v95[v200 + 1 ],v95[v202])};for v359=1,v201 do v95[v202 + v359 ]=v203[v359];end local v204=v203[1];if v204 then local v389=0;while true do if (v389==0) then v95[v202]=v204;v89=v97[3];break;end end else v89=v89 + 1 ;end else local v205=0;local v206;local v207;local v208;local v209;while true do if (v205==1) then v90=(v208 + v206) -1 ;v209=0;v205=2;end if (v205==0) then v206=v97[2];v207,v208=v88(v95[v206](v95[v206 + 1 ]));v205=1;end if (v205==2) then for v458=v206,v90 do local v459=0;while true do if (v459==0) then v209=v209 + 1 ;v95[v458]=v207[v209];break;end end end break;end end end elseif (v98<=10) then if (v98>9) then local v210=0;local v211;local v212;while true do if (0==v210) then v211=v97[2];v212={};v210=1;end if (v210==1) then for v460=1, #v94 do local v461=v94[v460];for v497=0 -0 , #v461 do local v498=0;local v499;local v500;local v501;while true do if (v498==1) then v501=v499[2];if ((v500==v95) and (v501>=v211)) then v212[v501]=v500[v501];v499[1]=v212;end break;end if (v498==0) then v499=v461[v497];v500=v499[1];v498=1;end end end end break;end end elseif (v97[2]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>11) then v95[v97[2]]=v95[v97[5 -2 ]];else v95[v97[2]]=v40(v86[v97[3]],nil,v72);end elseif (v98<=18) then if (v98<=(27 -12)) then if (v98<=13) then local v134=v97[2];v95[v134]=v95[v134](v95[v134 + 1 ]);elseif (v98==14) then local v216=0;local v217;local v218;while true do if (v216==0) then v217=v97[2];v218=v95[v97[353 -(87 + 263) ]];v216=1;end if (v216==1) then v95[v217 + 1 ]=v218;v95[v217]=v218[v95[v97[4]]];break;end end else local v219=0;local v220;local v221;local v222;local v223;while true do if (v219==2) then for v462=v220,v90 do v223=v223 + 1 ;v95[v462]=v221[v223];end break;end if (v219==1) then v90=(v222 + v220) -1 ;v223=0;v219=2;end if (v219==0) then v220=v97[2];v221,v222=v88(v95[v220](v95[v220 + 1 ]));v219=1;end end end elseif (v98<=(196 -(67 + 113))) then local v136=v86[v97[3 + 0 ]];local v137;local v138={};v137=v18({},{[v7("\13\233\137\32\236\8\90","\34\82\182\224\78\136\109")]=function(v182,v183) local v184=0;local v185;while true do if (v184==0) then v185=v138[v183];return v185[1][v185[4 -2 ]];end end end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v186,v187,v188) local v189=0;local v190;while true do if (0==v189) then v190=v138[v187];v190[1 + 0 ][v190[2]]=v188;break;end end end});for v191=1,v97[4] do local v192=0;local v193;while true do if (v192==0) then v89=v89 + 1 ;v193=v85[v89];v192=1;end if (1==v192) then if (v193[3 -2 ]==59) then v138[v191-(953 -(802 + 150)) ]={v95,v193[3]};else v138[v191-1 ]={v71,v193[3]};end v94[ #v94 + 1 ]=v138;break;end end end v95[v97[2]]=v40(v136,v137,v72);elseif (v98==17) then v95[v97[2]]=v40(v86[v97[3]],nil,v72);else local v225=v97[2];v95[v225]=v95[v225]();end elseif (v98<=21) then if (v98<=19) then v95[v97[2]][v97[3]]=v95[v97[4]];elseif (v98>20) then local v227=0;local v228;local v229;local v230;local v231;while true do if (v227==2) then for v467=v228,v90 do v231=v231 + (1 -0) ;v95[v467]=v229[v231];end break;end if (v227==0) then v228=v97[2];v229,v230=v88(v95[v228](v21(v95,v228 + 1 ,v97[3])));v227=1;end if (v227==1) then v90=(v230 + v228) -(2 -1) ;v231=0;v227=2;end end else local v232=0;local v233;local v234;local v235;while true do if (v232==1) then v235=0;for v470=v233,v97[4] do v235=v235 + 1 ;v95[v470]=v234[v235];end break;end if (v232==0) then v233=v97[2];v234={v95[v233](v21(v95,v233 + 1 ,v90))};v232=1;end end end elseif (v98<=23) then if (v98==(1019 -(915 + 82))) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else local v237=0;local v238;local v239;while true do if (v237==1) then for v473=1, #v94 do local v474=0;local v475;while true do if (0==v474) then v475=v94[v473];for v528=0, #v475 do local v529=0;local v530;local v531;local v532;while true do if (v529==0) then v530=v475[v528];v531=v530[1];v529=1;end if (v529==1) then v532=v530[2];if ((v531==v95) and (v532>=v238)) then local v543=0;while true do if (v543==0) then v239[v532]=v531[v532];v530[2 -1 ]=v239;break;end end end break;end end end break;end end end break;end if (0==v237) then v238=v97[2];v239={};v237=1;end end end elseif (v98>24) then local v240=v97[2];v95[v240](v21(v95,v240 + 1 ,v90));elseif (v95[v97[2 + 0 ]]==v97[4]) then v89=v89 + (1 -0) ;else v89=v97[3];end elseif (v98<=38) then if (v98<=31) then if (v98<=(1215 -(1069 + 118))) then if (v98<=26) then v95[v97[2]]=v71[v97[3]];elseif (v98==27) then local v241=0;local v242;local v243;while true do if (v241==1) then v95[v242 + 1 ]=v243;v95[v242]=v243[v95[v97[4]]];break;end if (v241==0) then v242=v97[2];v243=v95[v97[3]];v241=1;end end else local v244=v97[4 -2 ];local v245=v95[v244];local v246=v95[v244 + 2 ];if (v246>0) then if (v245>v95[v244 + 1 ]) then v89=v97[3];else v95[v244 + 3 ]=v245;end elseif (v245<v95[v244 + 1 ]) then v89=v97[3];else v95[v244 + 3 ]=v245;end end elseif (v98<=29) then v95[v97[2]]={};elseif (v98>30) then do return;end elseif v95[v97[3 -1 ]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=34) then if (v98<=32) then local v145=0;local v146;local v147;local v148;local v149;while true do if (v145==2) then for v398=v146,v90 do local v399=0;while true do if (0==v399) then v149=v149 + 1 ;v95[v398]=v147[v149];break;end end end break;end if (0==v145) then v146=v97[1 + 1 ];v147,v148=v88(v95[v146](v21(v95,v146 + (1 -0) ,v97[3])));v145=1;end if (1==v145) then v90=(v148 + v146) -1 ;v149=0;v145=2;end end elseif (v98==33) then v95[v97[2]][v97[3]]=v97[4];else v95[v97[2]]= #v95[v97[3]];end elseif (v98<=36) then if (v98>35) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else v72[v97[3]]=v95[v97[2]];end elseif (v98==37) then v95[v97[2]]=v97[3]~=0 ;else local v254=v97[2];v95[v254]=v95[v254](v21(v95,v254 + 1 ,v90));end elseif (v98<=45) then if (v98<=41) then if (v98<=39) then v71[v97[3]]=v95[v97[2]];elseif (v98==40) then v89=v97[3 + 0 ];else local v257=0;local v258;local v259;local v260;while true do if (v257==0) then v258=v97[793 -(368 + 423) ];v259=v95[v258];v257=1;end if (v257==1) then v260=v97[3];for v480=1,v260 do v259[v480]=v95[v258 + v480 ];end break;end end end elseif (v98<=43) then if (v98==42) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else do return v95[v97[6 -4 ]]();end end elseif (v98==44) then local v261=0;local v262;while true do if (v261==0) then v262=v97[2];v95[v262](v21(v95,v262 + 1 ,v97[3]));break;end end else local v263=0;local v264;local v265;while true do if (v263==1) then for v483=v264 + (19 -(10 + 8)) ,v90 do v15(v265,v95[v483]);end break;end if (v263==0) then v264=v97[2];v265=v95[v264];v263=1;end end end elseif (v98<=48) then if (v98<=46) then local v152=v97[2];local v153=v95[v97[3]];v95[v152 + (3 -2) ]=v153;v95[v152]=v153[v97[4]];elseif (v98>(489 -(416 + 26))) then v95[v97[2]][v97[3]]=v95[v97[4]];else v95[v97[2]]();end elseif (v98<=50) then if (v98==49) then local v268=0;local v269;while true do if (v268==0) then v269=v97[2];v95[v269]=v95[v269](v21(v95,v269 + 1 ,v90));break;end end else local v270=0;local v271;while true do if (v270==0) then v271=v97[6 -4 ];v95[v271]=v95[v271](v95[v271 + 1 ]);break;end end end elseif (v98>51) then v95[v97[2]]=v97[3]~=0 ;else local v273=0;local v274;while true do if (v273==0) then v274=v97[1 + 1 ];v95[v274](v95[v274 + 1 ]);break;end end end elseif (v98<=79) then if (v98<=65) then if (v98<=58) then if (v98<=(96 -41)) then if (v98<=(491 -(145 + 293))) then local v157=v97[2];v95[v157]=v95[v157]();elseif (v98>(484 -(44 + 386))) then if (v95[v97[2]]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[2]]=v95[v97[3]][v95[v97[4]]];end elseif (v98<=56) then v95[v97[2]]=v95[v97[3]][v97[4]];elseif (v98==(1543 -(998 + 488))) then v95[v97[2]]= #v95[v97[3]];else v95[v97[2]]=v95[v97[3]]%v97[4] ;end elseif (v98<=(20 + 41)) then if (v98<=59) then v95[v97[2 + 0 ]]=v95[v97[3]];elseif (v98==60) then local v279=0;local v280;while true do if (v279==0) then v280=v97[2];v95[v280](v21(v95,v280 + 1 ,v90));break;end end elseif  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=63) then if (v98>62) then local v281=v86[v97[775 -(201 + 571) ]];local v282;local v283={};v282=v18({},{[v7("\1\0\240\255\58\58\225","\145\94\95\153")]=function(v363,v364) local v365=0;local v366;while true do if (v365==0) then v366=v283[v364];return v366[1][v366[1140 -(116 + 1022) ]];end end end,[v7("\194\242\26\208\89\190\243\201\17\205","\215\157\173\116\181\46")]=function(v367,v368,v369) local v370=v283[v368];v370[1][v370[2]]=v369;end});for v372=1,v97[4] do v89=v89 + 1 ;local v373=v85[v89];if (v373[1]==59) then v283[v372-1 ]={v95,v373[3]};else v283[v372-1 ]={v71,v373[3]};end v94[ #v94 + 1 ]=v283;end v95[v97[2]]=v40(v281,v282,v72);else local v285=0;local v286;local v287;local v288;local v289;while true do if (v285==1) then v90=(v288 + v286) -1 ;v289=0;v285=2;end if (v285==2) then for v485=v286,v90 do local v486=0;while true do if (0==v486) then v289=v289 + 1 ;v95[v485]=v287[v289];break;end end end break;end if (0==v285) then v286=v97[2];v287,v288=v88(v95[v286](v21(v95,v286 + (4 -3) ,v90)));v285=1;end end end elseif (v98==64) then v71[v97[3]]=v95[v97[2 + 0 ]];else v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;end elseif (v98<=72) then if (v98<=68) then if (v98<=(240 -174)) then local v163=0;local v164;while true do if (v163==0) then v164=v97[2];v95[v164]=v95[v164](v21(v95,v164 + 1 ,v97[3]));break;end end elseif (v98>67) then v95[v97[2]]=v95[v97[10 -7 ]][v95[v97[863 -(814 + 45) ]]];elseif  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=70) then if (v98>69) then local v295=0;local v296;while true do if (0==v295) then v296=v97[2];do return v21(v95,v296,v90);end break;end end else v95[v97[2]]=v97[3] + v95[v97[4]] ;end elseif (v98==71) then local v298=0;local v299;local v300;local v301;local v302;while true do if (v298==2) then for v487=v299,v90 do local v488=0;while true do if (v488==0) then v302=v302 + 1 ;v95[v487]=v300[v302];break;end end end break;end if (v298==0) then v299=v97[2];v300,v301=v88(v95[v299](v21(v95,v299 + 1 ,v90)));v298=1;end if (v298==1) then v90=(v301 + v299) -1 ;v302=0;v298=2;end end else v95[v97[2]][v97[3]]=v97[4];end elseif (v98<=75) then if (v98<=73) then local v165=0;local v166;local v167;local v168;while true do if (v165==1) then v168=v95[v166] + v167 ;v95[v166]=v168;v165=2;end if (v165==0) then v166=v97[2];v167=v95[v166 + 2 ];v165=1;end if (v165==2) then if (v167>0) then if (v168<=v95[v166 + 1 ]) then v89=v97[3];v95[v166 + 3 ]=v168;end elseif (v168>=v95[v166 + 1 ]) then v89=v97[3];v95[v166 + 3 ]=v168;end break;end end elseif (v98==74) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];else v95[v97[2]][v95[v97[7 -4 ]]]=v97[4];end elseif (v98<=77) then if (v98==76) then local v309=0;local v310;while true do if (v309==0) then v310=v97[2];v95[v310](v21(v95,v310 + 1 ,v97[3]));break;end end else local v311=0;local v312;local v313;local v314;while true do if (v311==0) then v312=v97[2];v313=v95[v312];v311=1;end if (v311==1) then v314=v95[v312 + 2 ];if (v314>0) then if (v313>v95[v312 + 1 ]) then v89=v97[3];else v95[v312 + 3 ]=v313;end elseif (v313<v95[v312 + 1 ]) then v89=v97[3];else v95[v312 + 3 ]=v313;end break;end end end elseif (v98>78) then v95[v97[2]]=v72[v97[3]];else v95[v97[2]]=v72[v97[3]];end elseif (v98<=(5 + 87)) then if (v98<=85) then if (v98<=82) then if (v98<=80) then v95[v97[2]]=v95[v97[3]]%v97[4] ;elseif (v98>81) then for v380=v97[2],v97[3] do v95[v380]=nil;end else local v319=v97[1 + 1 ];v95[v319](v95[v319 + (886 -(261 + 624)) ]);end elseif (v98<=83) then local v170=0;local v171;local v172;while true do if (v170==0) then v171=v97[2];v172=v95[v171];v170=1;end if (v170==1) then for v404=v171 + 1 ,v97[3] do v15(v172,v95[v404]);end break;end end elseif (v98==84) then do return v95[v97[2]]();end else v95[v97[2]]=v97[3];end elseif (v98<=88) then if (v98<=86) then v95[v97[2]][v95[v97[3]]]=v97[6 -2 ];elseif (v98>87) then local v322=0;local v323;local v324;local v325;while true do if (v322==1) then v325=v97[3];for v489=1,v325 do v324[v489]=v95[v323 + v489 ];end break;end if (v322==0) then v323=v97[2];v324=v95[v323];v322=1;end end else local v326=v97[2];local v327=v97[1084 -(1020 + 60) ];local v328=v326 + 2 ;local v329={v95[v326](v95[v326 + 1 ],v95[v328])};for v384=1,v327 do v95[v328 + v384 ]=v329[v384];end local v330=v329[1];if v330 then local v405=0;while true do if (v405==0) then v95[v328]=v330;v89=v97[3];break;end end else v89=v89 + 1 ;end end elseif (v98<=90) then if (v98==89) then local v331=0;local v332;local v333;local v334;while true do if (v331==0) then v332=v97[2];v333={v95[v332](v21(v95,v332 + 1 ,v90))};v331=1;end if (v331==1) then v334=0;for v492=v332,v97[13 -9 ] do local v493=0;while true do if (0==v493) then v334=v334 + 1 ;v95[v492]=v333[v334];break;end end end break;end end else v95[v97[2]]=v97[3];end elseif (v98>91) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];else v95[v97[2]]();end elseif (v98<=99) then if (v98<=95) then if (v98<=93) then local v175=v97[2];v95[v175]=v95[v175](v21(v95,v175 + 1 ,v97[3]));elseif (v98>94) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;elseif (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=97) then if (v98==96) then local v340=0;local v341;while true do if (v340==0) then v341=v97[2];do return v95[v341](v21(v95,v341 + 1 ,v97[14 -11 ]));end break;end end else local v342=v97[2];do return v21(v95,v342,v90);end end elseif (v98==98) then v95[v97[2]]=v95[v97[3]][v97[4]];else local v345=0;local v346;local v347;local v348;while true do if (v345==1) then v348=v95[v346] + v347 ;v95[v346]=v348;v345=2;end if (v345==0) then v346=v97[1 + 1 ];v347=v95[v346 + 2 ];v345=1;end if (v345==2) then if (v347>0) then if (v348<=v95[v346 + 1 ]) then local v523=0;while true do if (v523==0) then v89=v97[3];v95[v346 + 3 ]=v348;break;end end end elseif (v348>=v95[v346 + 1 ]) then local v524=0;while true do if (0==v524) then v89=v97[3];v95[v346 + 3 ]=v348;break;end end end break;end end end elseif (v98<=102) then if (v98<=100) then local v177=0;local v178;while true do if (0==v177) then v178=v97[2];do return v95[v178](v21(v95,v178 + 1 ,v97[3]));end break;end end elseif (v98==101) then if (v95[v97[6 -4 ]]<v97[4]) then v89=v89 + (1748 -(760 + 987)) ;else v89=v97[1916 -(1789 + 124) ];end else do return;end end elseif (v98<=104) then if (v98==103) then v89=v97[3];else local v350=0;local v351;local v352;while true do if (v350==0) then v351=v97[2];v352=v95[v351];v350=1;end if (v350==1) then for v494=v351 + 1 ,v90 do v15(v352,v95[v494]);end break;end end end elseif (v98==105) then local v353=v97[2];local v354=v95[v97[3]];v95[v353 + 1 ]=v354;v95[v353]=v354[v97[4]];elseif (v95[v97[2]]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end v89=v89 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

